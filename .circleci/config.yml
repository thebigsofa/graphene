version: 2.1
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.3

      - image: circleci/postgres:10.5-alpine
        environment:
           POSTGRES_USER: bigsofa
           POSTGRES_PASSWORD: bigsofa

      - image: redis

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            bundle config gems.contribsys.com $SIDEKIQ_TOKEN
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile" }}

      - run:
          name: Update /etc/hosts File
          command: |
            sudo echo 127.0.0.1 redis | sudo tee -a /etc/hosts
            sudo echo 127.0.0.1 postgres | sudo tee -a /etc/hosts

      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgress && exit 1

      # Database setup
      - run: bundle exec rake db:create db:schema:load

      - run:
          name: Run Rubocop and Ruby Critic
          command: |
            export LC_ALL=C.UTF-8
            export LANG=en_US.UTF-8
            export LANGUAGE=en_US.UTF-8
            ./bin/quality

      - run:
          name: Run rspec Tests
          command: |
            mkdir /tmp/test-results/rspec
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"

            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec/rspec.xml \
              --format progress \
              $TEST_FILES

      - run:
          name: Bundle Gem and push to Nexus
          command: |
            if [[ $CIRCLE_BRANCH = "master" ]]
            then
              echo "Building graphene gem and pushing to Nexus..."
              gem install nexus
              gem build graphene.gemspec
              GRAPHENE_VERSION=$(ruby -e 'require("#{`pwd`.strip}/lib/graphene/version.rb"); puts Graphene::VERSION')
              gem nexus --credential $NEXUS_TOKEN --url https://repo.bigsofa.co.uk/repository/rubygems -V --backtrace --debug graphene-${GRAPHENE_VERSION}.gem
            else
              echo "Not master branch. Skipping gem build and Nexus push."
            fi

      - store_test_results:
          path: /tmp/test-results/rspec

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
